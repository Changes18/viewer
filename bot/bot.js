const { Telegraf } = require('telegraf');
const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');
const { createWorker } = require('tesseract.js');
const QRCode = require('qrcode');
require('dotenv').config({ path: path.join(__dirname, '..', '.env') });

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
if (!process.env.BOT_TOKEN) {
    console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
    console.error('üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞');
    process.exit(1);
}

console.log('‚úÖ BOT_TOKEN –Ω–∞–π–¥–µ–Ω');
const bot = new Telegraf(process.env.BOT_TOKEN);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_BASE_URL = process.env.API_BASE_URL || 'http://localhost:3001';
const UPLOAD_DIR = path.join(__dirname, '..', 'uploads', 'bot');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (!fs.existsSync(UPLOAD_DIR)) {
    fs.mkdirSync(UPLOAD_DIR, { recursive: true });
}

// OCR Worker - —Å–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
let ocrWorker = null;

async function initializeOCR() {
    try {
        ocrWorker = await createWorker();
        await ocrWorker.loadLanguage('eng+rus');
        await ocrWorker.initialize('eng+rus');
        console.log('‚úÖ OCR –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OCR:', error);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OCR –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
initializeOCR();

// –ó–∞—Ä–∞–Ω–µ–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è "–ò–ò –∞–Ω–∞–ª–∏–∑–∞"
const motivationalMessages = [
    "üé® –û—Ç–ª–∏—á–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ø–æ–¥—Ö–æ–¥–µ –∫ —Ä–µ—à–µ–Ω–∏—é –∑–∞–¥–∞—á–∏!",
    "‚ú® –í–∏–¥–Ω–æ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∏ —Ü–≤–µ—Ç–∞!",
    "üåü –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ!",
    "üéØ –•–æ—Ä–æ—à–µ–µ –≤–ª–∞–¥–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏!",
    "üí° –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç!",
    "üöÄ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã!",
    "üèÜ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ –¥–µ—Ç–∞–ª–µ–π!",
    "‚≠ê –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ!",
    "üé™ –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–∞!",
    "üåà –û—Ç–ª–∏—á–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π –∏ –±–∞–ª–∞–Ω—Å–∞!",
    "üé≠ –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –≥–∞—Ä–º–æ–Ω–∏—è!",
    "üé™ –ú–∞—Å—Ç–µ—Ä—Å–∫–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–æ–π!",
    "üî• –í–ø–µ—á–∞—Ç–ª—è—é—â–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã!",
    "‚ö° –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥!",
    "üé® –ë–µ–∑—É–ø—Ä–µ—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è!",
    "üèÖ –†–∞–±–æ—Ç–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫–∏–µ –Ω–∞–≤—ã–∫–∏!",
    "‚ú® –û—Ç–ª–∏—á–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–∞—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞!",
    "üåü –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞!",
    "üé™ –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏!",
    "üöÄ –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞–±–æ—Ç–µ!",
    "üèÜ –í—ã–¥–∞—é—â–µ–µ—Å—è —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ!",
    "üíé –í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–∞—á–∞!",
    "üåà –ì–∞—Ä–º–æ–Ω–∏—á–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤!",
    "‚≠ê –ú–∞—Å—Ç–µ—Ä—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏!"
];

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
async function downloadTelegramFile(fileId, fileName) {
    try {
        const fileUrl = await bot.telegram.getFileLink(fileId);
        const response = await axios.get(fileUrl, { responseType: 'stream' });
        
        const filePath = path.join(UPLOAD_DIR, fileName);
        const writer = fs.createWriteStream(filePath);
        
        response.data.pipe(writer);
        
        return new Promise((resolve, reject) => {
            writer.on('finish', () => resolve(filePath));
            writer.on('error', reject);
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
        throw error;
    }
}

// OCR –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function extractTextFromImage(imagePath) {
    try {
        if (!ocrWorker) {
            await initializeOCR();
        }
        
        const { data: { text } } = await ocrWorker.recognize(imagePath);
        return text.trim();
    } catch (error) {
        console.error('OCR –æ—à–∏–±–∫–∞:', error);
        return '–¢–µ–∫—Å—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω';
    }
}

// –ò–º–∏—Ç–∞—Ü–∏—è –ò–ò –∞–Ω–∞–ª–∏–∑–∞
function generateAIFeedback(extractedText = '', fileName = '') {
    // –ë–∞–∑–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ (—Ç–æ–ª—å–∫–æ –≤—ã—Å–æ–∫–∏–µ, –Ω–µ –Ω–∏–∂–µ 80)
    const scores = [80, 82, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99];
    const randomScore = scores[Math.floor(Math.random() * scores.length)];
    
    let feedback = motivationalMessages[Math.floor(Math.random() * motivationalMessages.length)];
    
    // –î–æ–±–∞–≤–ª—è–µ–º "–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π" –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    const analysisPoints = [];
    
    // –§–µ–π–∫–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if (fileName.toLowerCase().includes('–¥–∏–∑–∞–π–Ω') || fileName.toLowerCase().includes('design')) {
        analysisPoints.push("üìê –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞");
    }
    if (fileName.toLowerCase().includes('–ø—Ä–æ–µ–∫—Ç') || fileName.toLowerCase().includes('project')) {
        analysisPoints.push("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ø—Ä–æ–µ–∫—Ç—É");
    }
    
    // –§–µ–π–∫–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ OCR —Ç–µ–∫—Å—Ç–∞
    if (extractedText && extractedText.length > 10) {
        const text = extractedText.toLowerCase();
        if (text.includes('—Ü–≤–µ—Ç') || text.includes('color')) {
            analysisPoints.push("üé® –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ü–≤–µ—Ç–æ–º");
        }
        if (text.includes('—Ç–µ–∫—Å—Ç') || text.includes('—à—Ä–∏—Ñ—Ç') || text.includes('font')) {
            analysisPoints.push("‚úçÔ∏è –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞");
        }
        if (text.includes('–∫–æ–º–ø–æ–∑–∏—Ü–∏—è') || text.includes('layout')) {
            analysisPoints.push("üñºÔ∏è –ì—Ä–∞–º–æ—Ç–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è");
        }
    }
    
    // –û–±—â–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    if (analysisPoints.length === 0) {
        const defaultPoints = [
            "‚ú® –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏",
            "üéØ –•–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π",
            "üí° –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
            "üöÄ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ"
        ];
        analysisPoints.push(defaultPoints[Math.floor(Math.random() * defaultPoints.length)]);
    }
      const areas = [
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –∫–æ–Ω—Ç—Ä–∞—Å—Ç–æ–º",
        "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ–ª—å—à–µ –±–µ–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞", 
        "–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–π —Å—Ç–∏–ª—å",
        "–•–æ—Ä–æ—à–∞—è –æ—Å–Ω–æ–≤–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è"
    ];
    const randomArea = areas[Math.floor(Math.random() * areas.length)];
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º grade level –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–∞—à–±–æ—Ä–¥—É
    let gradeLevel = 'excellent'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    let gradeNumber = '1';
    let gradeText = '–û—Ç–ª–∏—á–Ω–æ';
    
    if (randomScore >= 95) {
        gradeLevel = 'excellent';
        gradeNumber = '1';
        gradeText = '–û—Ç–ª–∏—á–Ω–æ';
    } else if (randomScore >= 85) {
        gradeLevel = 'good';
        gradeNumber = '2';
        gradeText = '–•–æ—Ä–æ—à–æ';
    } else {
        gradeLevel = 'needs_work';
        gradeNumber = '3';
        gradeText = '–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å';
    }
    
    return {
        score: randomScore,
        gradeLevel,
        gradeNumber,
        gradeText,
        feedback: `${feedback}\n\nüìä **–ê–Ω–∞–ª–∏–∑ —Ä–∞–±–æ—Ç—ã:**\n${analysisPoints.join('\n')}\n\nüí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:** ${randomArea}\n\nüéØ **–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: ${gradeNumber}/3 (${gradeText}) - ${randomScore}/100**\n\n‚è≥ *–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É –≤—ã—Å—Ç–∞–≤–∏—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å*`
    };
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ backend API
async function submitToAPI(submissionData) {
    try {
        const response = await axios.post(`${API_BASE_URL}/api/webhook/submission`, submissionData, {
            headers: {
                'Content-Type': 'application/json'
            }
        });
        return response.data;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ API:', error.message);
        throw error;
    }
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
    const welcomeMessage = `
üéì **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç!**

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ –≤–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É –æ—Ç –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞.

üìã **–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ –∏–ª–∏ PDF –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã
2Ô∏è‚É£ –Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –µ—ë —Å –ø–æ–º–æ—â—å—é –ò–ò
3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ –æ—Ü–µ–Ω–∫—É

üìé **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**
‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPG, PNG)
‚Ä¢ PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 20 –ú–ë

üöÄ **–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?** –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É!
    `;
    
    const keyboard = {
        reply_markup: {
            inline_keyboard: [
                [{ text: 'üìö –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç', callback_data: 'examples' }],
                [{ text: '‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data: 'faq' }],
                [{ text: 'üìä –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏', callback_data: 'criteria' }]
            ]
        }
    };
    
    ctx.reply(welcomeMessage, { 
        parse_mode: 'Markdown',
        ...keyboard
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (ctx) => {
    const action = ctx.callbackQuery.data;
    
    switch (action) {
        case 'examples':
            ctx.answerCbQuery();
            ctx.reply(`
üìö **–ü—Ä–∏–º–µ—Ä—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç:**

üé® **–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω:**
‚Ä¢ –ß–µ—Ç–∫–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è
‚Ä¢ –ì–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ —Ü–≤–µ—Ç–∞
‚Ä¢ –ß–∏—Ç–∞–µ–º–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞

üì± **UI/UX –¥–∏–∑–∞–π–Ω:**
‚Ä¢ –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç

üìä **–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏:**
‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
‚Ä¢ –í–∏–∑—É–∞–ª—å–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            `, { parse_mode: 'Markdown' });
            break;
            
        case 'faq':
            ctx.answerCbQuery();
            ctx.reply(`
‚ùì **–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:**

**Q: –ö–∞–∫–∏–µ —Ñ–∞–π–ª—ã –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å?**
A: JPG, PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–æ 20 –ú–ë

**Q: –ö–∞–∫ –¥–æ–ª–≥–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞?**
A: –û–±—ã—á–Ω–æ 10-30 —Å–µ–∫—É–Ω–¥

**Q: –ú–æ–∂–Ω–æ –ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø–æ–≤—Ç–æ—Ä–Ω–æ?**
A: –î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤

**Q: –ö—Ç–æ —É–≤–∏–¥–∏—Ç –º–æ—é —Ä–∞–±–æ—Ç—É?**
A: –í–∞—à –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–∏—Å—Ç–µ–º—ã
            `, { parse_mode: 'Markdown' });
            break;
            
        case 'criteria':
            ctx.answerCbQuery();
            ctx.reply(`
üìä **–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏ –ò–ò:**

üé® **–í–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (30%):**
‚Ä¢ –ö–æ–º–ø–æ–∑–∏—Ü–∏—è –∏ –±–∞–ª–∞–Ω—Å
‚Ä¢ –¶–≤–µ—Ç–æ–≤–∞—è –≥–∞—Ä–º–æ–Ω–∏—è
‚Ä¢ –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞

üí° **–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (25%):**
‚Ä¢ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥

üéØ **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ (25%):**
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã
‚Ä¢ –í–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º

üìã **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–¥–∞–Ω–∏—é (20%):**
‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
‚Ä¢ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
            `, { parse_mode: 'Markdown' });
            break;
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
bot.on('photo', async (ctx) => {
    const processingMsg = await ctx.reply('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
        const photos = ctx.message.photo;
        const bestPhoto = photos[photos.length - 1];
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        const fileName = `photo_${Date.now()}_${ctx.from.id}.jpg`;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        await ctx.telegram.editMessageText(
            ctx.chat.id, 
            processingMsg.message_id, 
            null,
            'üì• –ó–∞–≥—Ä—É–∂–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...'
        );
        
        const filePath = await downloadTelegramFile(bestPhoto.file_id, fileName);
        
        // OCR –æ–±—Ä–∞–±–æ—Ç–∫–∞
        await ctx.telegram.editMessageText(
            ctx.chat.id,
            processingMsg.message_id, 
            null,
            'üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...'
        );
        
        const extractedText = await extractTextFromImage(filePath);
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ò–ò —Ñ–∏–¥–±–µ–∫–∞
        await ctx.telegram.editMessageText(
            ctx.chat.id,
            processingMsg.message_id,
            null, 
            'ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à—É —Ä–∞–±–æ—Ç—É...'
        );
          const aiResult = generateAIFeedback(extractedText, fileName);
        
        // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API
        const submissionData = {
            studentId: ctx.from.id,
            studentName: `${ctx.from.first_name} ${ctx.from.last_name || ''}`.trim(),
            fileName,
            fileUrl: `/uploads/bot/${fileName}`,
            fileType: 'image',
            extractedText,
            telegramFileId: bestPhoto.file_id,
            aiScore: aiResult.score,
            aiComment: aiResult.feedback
        };
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ backend
        await submitToAPI(submissionData);
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ
        await ctx.telegram.deleteMessage(ctx.chat.id, processingMsg.message_id);
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const resultMessage = `
üéâ **–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!**

${aiResult.feedback}

üì§ –í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏.
üèÜ **–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ò–ò: ${aiResult.gradeNumber}/3 (${aiResult.gradeText})**

üîÑ –•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É —Ä–∞–±–æ—Ç—É? –ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª!
        `;
        
        const keyboard = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ —Ä–∞–±–æ—Ç—É', callback_data: 'upload_more' }],
                    [{ text: 'üìä –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏', callback_data: 'criteria' }]
                ]
            }
        };
        
        await ctx.reply(resultMessage, { 
            parse_mode: 'Markdown',
            ...keyboard
        });
        
        console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç ${submissionData.studentName} (${ctx.from.id})`);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ:', error);
        
        await ctx.telegram.editMessageText(
            ctx.chat.id,
            processingMsg.message_id,
            null,
            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.'
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (PDF)
bot.on('document', async (ctx) => {
    const document = ctx.message.document;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    if (!document.mime_type.includes('pdf') && !document.mime_type.includes('image')) {
        return ctx.reply('‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPG, PNG) –∏ PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã.');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (20MB –ª–∏–º–∏—Ç)
    if (document.file_size > 20 * 1024 * 1024) {
        return ctx.reply('‚ùå –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 –ú–ë.');
    }
    
    const processingMsg = await ctx.reply('üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç...');
    
    try {
        const fileName = document.file_name || `document_${Date.now()}_${ctx.from.id}.pdf`;
        
        await ctx.telegram.editMessageText(
            ctx.chat.id,
            processingMsg.message_id,
            null,
            'üì• –ó–∞–≥—Ä—É–∂–∞—é –¥–æ–∫—É–º–µ–Ω—Ç...'
        );
        
        await downloadTelegramFile(document.file_id, fileName);
        
        await ctx.telegram.editMessageText(
            ctx.chat.id,
            processingMsg.message_id,
            null,
            'ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç...'
        );
          // –î–ª—è PDF –ø—Ä–æ—Å—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–¥–±–µ–∫ –±–µ–∑ OCR
        const aiResult = generateAIFeedback('', fileName);
        
        const submissionData = {
            studentId: ctx.from.id,
            studentName: `${ctx.from.first_name} ${ctx.from.last_name || ''}`.trim(),
            fileName,
            fileUrl: `/uploads/bot/${fileName}`,
            fileType: 'document',
            extractedText: 'PDF –¥–æ–∫—É–º–µ–Ω—Ç',
            telegramFileId: document.file_id,
            aiScore: aiResult.score,
            aiComment: aiResult.feedback
        };
        
        await submitToAPI(submissionData);
        
        await ctx.telegram.deleteMessage(ctx.chat.id, processingMsg.message_id);
        
        const resultMessage = `
üìÑ **PDF –¥–æ–∫—É–º–µ–Ω—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!**

${aiResult.feedback}

üì§ –î–æ–∫—É–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –¥–ª—è –æ—Ü–µ–Ω–∫–∏.
        `;
        
        await ctx.reply(resultMessage, { parse_mode: 'Markdown' });
        
        console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω PDF –æ—Ç ${submissionData.studentName} (${ctx.from.id})`);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
        
        await ctx.telegram.editMessageText(
            ctx.chat.id,
            processingMsg.message_id,
            null,
            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', (ctx) => {
    if (ctx.message.text.startsWith('/')) return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    
    ctx.reply(`
ü§ñ –Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã!

üìã **–ß—Ç–æ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:**
‚Ä¢ üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ä–∞–±–æ—Ç (JPG, PNG)
‚Ä¢ üìÑ PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã
‚Ä¢ üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 20 –ú–ë

üí° –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ!
    `, { parse_mode: 'Markdown' });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
    ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
});

// Graceful shutdown
process.once('SIGINT', async () => {
    console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...');
    if (ocrWorker) {
        await ocrWorker.terminate();
    }
    bot.stop('SIGINT');
});

process.once('SIGTERM', async () => {
    console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...');
    if (ocrWorker) {
        await ocrWorker.terminate(); 
    }
    bot.stop('SIGTERM');
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞ –¥–ª—è –±–æ—Ç–∞
async function generateBotQR() {
    try {
        const botUsername = process.env.BOT_USERNAME || 'your_bot_username';
        const botUrl = `https://t.me/${botUsername}`;
        
        const qrPath = path.join(__dirname, 'bot_qr.png');
        await QRCode.toFile(qrPath, botUrl, {
            width: 400,
            margin: 2
        });
        
        console.log(`üì± QR-–∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${qrPath}`);
        console.log(`üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞: ${botUrl}`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
console.log('üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
generateBotQR();
bot.launch();

console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
console.log('üì± –°—Ç—É–¥–µ–Ω—Ç—ã –º–æ–≥—É—Ç –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –∫–æ–º–∞–Ω–¥–æ–π /start');
