# Student Work Analysis System - Setup Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

param(
    [switch]$SkipNodeInstall,
    [switch]$SkipGitInit,
    [string]$BotToken = "",
    [string]$DatabaseUrl = "sqlite:./database.db",
    [switch]$RunDemo
)

Write-Host "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Student Work Analysis System..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
function Test-NodeJS {
    try {
        $nodeVersion = node --version
        Write-Host "‚úÖ Node.js –Ω–∞–π–¥–µ–Ω: $nodeVersion" -ForegroundColor Green
        return $true
    }
    catch {
        Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        return $false
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js —á–µ—Ä–µ–∑ Chocolatey –∏–ª–∏ Winget
function Install-NodeJS {
    Write-Host "üîß –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js..." -ForegroundColor Yellow
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º winget (–≤—Å—Ç—Ä–æ–µ–Ω –≤ Windows 10/11)
    try {
        winget install OpenJS.NodeJS
        refreshenv
        Write-Host "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ winget" -ForegroundColor Green
        return
    }
    catch {
        Write-Host "‚ö†Ô∏è Winget –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º Chocolatey..." -ForegroundColor Yellow
    }
    
    # –ï—Å–ª–∏ winget –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º Chocolatey
    if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
        Write-Host "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Chocolatey..." -ForegroundColor Yellow
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        refreshenv
    }
    
    Write-Host "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Node.js —á–µ—Ä–µ–∑ Chocolatey..." -ForegroundColor Yellow
    choco install nodejs -y
    refreshenv
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
function New-ProjectStructure {
    Write-Host "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Yellow
    
    $folders = @(
        "uploads",
        "uploads\bot", 
        "database",
        "demo-data"
    )
    
    foreach ($folder in $folders) {
        if (-not (Test-Path $folder)) {
            New-Item -ItemType Directory -Path $folder -Force | Out-Null
            Write-Host "   ‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ $folder" -ForegroundColor Gray
        }
    }
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
function Initialize-Projects {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
    
    $projects = @(
        @{Name = "Backend"; Path = "backend"},
        @{Name = "Frontend"; Path = "frontend"}, 
        @{Name = "Bot"; Path = "bot"}
    )
    
    foreach ($project in $projects) {
        if (Test-Path "$($project.Path)\package.json") {
            Write-Host "   üîÑ $($project.Name)..." -ForegroundColor Gray
            Set-Location $project.Path
            npm install --silent
            Set-Location ..
            Write-Host "   ‚úÖ $($project.Name) –≥–æ—Ç–æ–≤" -ForegroundColor Green
        } else {
            Write-Host "   ‚ö†Ô∏è $($project.Name): package.json –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
        }
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function New-ConfigFiles {
    Write-Host "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Yellow
    
    # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
    if (Test-Path ".env") {
        $envContent = Get-Content ".env" -Raw
        
        if ($BotToken -and $BotToken -ne "") {
            $envContent = $envContent -replace "BOT_TOKEN=.*", "BOT_TOKEN=$BotToken"
            Write-Host "   ‚úì –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        }
        
        $envContent | Set-Content ".env" -Encoding UTF8
    } else {
        Write-Host "   ‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    $requiredFiles = @(
        "backend\server.js",
        "frontend\src\App.tsx",
        "bot\bot.js"
    )
    
    $missingFiles = @()
    foreach ($file in $requiredFiles) {
        if (-not (Test-Path $file)) {
            $missingFiles += $file
        }
    }
    
    if ($missingFiles.Count -gt 0) {
        Write-Host "   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã:" -ForegroundColor Red
        $missingFiles | ForEach-Object { Write-Host "      ‚Ä¢ $_" -ForegroundColor Red }
        return $false
    }
    
    return $true
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    try {
        Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan
        Write-Host "  Student Work Analysis System Setup" -ForegroundColor Cyan
        Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
        if (-not $SkipNodeInstall -and -not (Test-NodeJS)) {
            Install-NodeJS
        }
        
        if (-not (Test-NodeJS)) {
            Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js. –ü—Ä–µ—Ä—ã–≤–∞—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ." -ForegroundColor Red
            Write-Host "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é: https://nodejs.org/" -ForegroundColor Yellow
            exit 1
        }
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        New-ProjectStructure
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if (-not (New-ConfigFiles)) {
            Write-Host "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞." -ForegroundColor Red
            exit 1
        }
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        Initialize-Projects
        
        # Git –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        if (-not $SkipGitInit -and -not (Test-Path ".git")) {
            Write-Host "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." -ForegroundColor Yellow
            git init
            git add .
            git commit -m "Initial project setup"
            Write-Host "   ‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
        }
        
        Write-Host "`nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Green
        
        Write-Host "`nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
        
        if (-not $BotToken -or $BotToken -eq "") {
            Write-Host "   1. ü§ñ –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather –≤ Telegram:" -ForegroundColor Gray
            Write-Host "      ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /newbot" -ForegroundColor Gray  
            Write-Host "      ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∏–º—è –∏ username –¥–ª—è –±–æ—Ç–∞" -ForegroundColor Gray
            Write-Host "      ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω" -ForegroundColor Gray
            Write-Host "      ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª .env: BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω" -ForegroundColor Gray
            Write-Host ""
        }
        
        Write-Host "   2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:" -ForegroundColor Gray
        Write-Host "      .\scripts\dev.ps1" -ForegroundColor Cyan
        Write-Host ""
        
        Write-Host "   3. üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:" -ForegroundColor Gray
        Write-Host "      http://localhost:5173" -ForegroundColor Cyan
        Write-Host ""
        
        Write-Host "   4. üîê –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç:" -ForegroundColor Gray
        Write-Host "      –õ–æ–≥–∏–Ω: teacher" -ForegroundColor Cyan
        Write-Host "      –ü–∞—Ä–æ–ª—å: admin123" -ForegroundColor Cyan
        
        # –û–ø—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ
        if ($RunDemo) {
            Write-Host "`nüé≠ –ó–∞–ø—É—Å–∫ —Å –¥–µ–º–æ –¥–∞–Ω–Ω—ã–º–∏..." -ForegroundColor Magenta
            & ".\scripts\test-system.ps1" -BotToken $BotToken
        } else {
            Write-Host "`nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Cyan
            Write-Host "   ‚Ä¢ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã:     .\scripts\test-system.ps1" -ForegroundColor Gray
            Write-Host "   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ–º–æ:   .\scripts\generate-demo.ps1" -ForegroundColor Gray
            Write-Host "   ‚Ä¢ –ü—Ä–æ–¥–∞–∫—à–Ω —Å–±–æ—Ä–∫–∞:  .\scripts\deploy.ps1" -ForegroundColor Gray
        }
        
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
Main
