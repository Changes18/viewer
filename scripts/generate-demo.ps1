# Demo Data Generator
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

Write-Host "üé≠ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Green

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é placeholder API
$demoImages = @(
    @{
        name = "design_project_1.jpg"
        url = "https://picsum.photos/800/600?random=1"
        student = "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"
    },
    @{
        name = "poster_design.jpg"
        url = "https://picsum.photos/800/600?random=2"
        student = "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞"
    },
    @{
        name = "logo_concept.jpg"
        url = "https://picsum.photos/800/600?random=3"
        student = "–ú–∏—Ö–∞–∏–ª –ö–æ–∑–ª–æ–≤"
    },
    @{
        name = "ui_mockup.jpg"
        url = "https://picsum.photos/800/600?random=4"
        student = "–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞"
    },
    @{
        name = "typography_work.jpg"
        url = "https://picsum.photos/800/600?random=5"
        student = "–î–º–∏—Ç—Ä–∏–π –°–æ–∫–æ–ª–æ–≤"
    }
)

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö
if (-not (Test-Path "demo-data")) {
    New-Item -ItemType Directory -Path "demo-data" | Out-Null
}

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JSON —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏
$demoSubmissions = @()

foreach ($image in $demoImages) {
    $submission = @{
        id = [System.Guid]::NewGuid().ToString()
        studentId = [Math]::Abs((Get-Random))
        studentName = $image.student
        fileName = $image.name
        fileUrl = "/uploads/demo/" + $image.name
        fileType = "image"
        extractedText = "–î–∏–∑–∞–π–Ω –ø—Ä–æ–µ–∫—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞. –¢–≤–æ—Ä—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –∑–∞–¥–∞–Ω–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."
        aiScore = Get-Random -Minimum 75 -Maximum 98
        aiComment = "–û—Ç–ª–∏—á–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –•–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∏ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –í–∏–¥–Ω–æ —Ä–∞–∑–≤–∏—Ç–æ–µ —á—É–≤—Å—Ç–≤–æ —Å—Ç–∏–ª—è –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º."
        teacherGrade = $null
        teacherComment = $null
        status = "pending"
        createdAt = (Get-Date).AddHours(-(Get-Random -Maximum 48)).ToString("o")
        assessedAt = $null
        assessedBy = $null
        telegramFileId = "demo_" + [System.Guid]::NewGuid().ToString()
    }
    
    $demoSubmissions += $submission
}

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON —Ñ–∞–π–ª
$demoSubmissions | ConvertTo-Json -Depth 10 | Out-File -FilePath "demo-data/submissions.json" -Encoding UTF8

Write-Host "‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:" -ForegroundColor Green
Write-Host "   ‚Ä¢ $($demoSubmissions.Count) —Ä–∞–±–æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤" -ForegroundColor Gray
Write-Host "   ‚Ä¢ –§–∞–π–ª: demo-data/submissions.json" -ForegroundColor Gray

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ API
$apiScript = @"
# API Demo Data Loader
import json
import requests
import time

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ
with open('demo-data/submissions.json', 'r', encoding='utf-8') as f:
    submissions = json.load(f)

API_BASE = 'http://localhost:3001'

print('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö –≤ API...')

for i, submission in enumerate(submissions):
    try:
        response = requests.post(f'{API_BASE}/api/webhook/submission', json=submission)
        if response.status_code == 200:
            print(f'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞ {i+1}: {submission["studentName"]}')
        else:
            print(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–±–æ—Ç—ã {i+1}: {response.status_code}')
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')

print('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
"@

$apiScript | Out-File -FilePath "demo-data/load_demo_data.py" -Encoding UTF8

Write-Host "üìã –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ API:" -ForegroundColor Yellow
Write-Host "   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend —Å–µ—Ä–≤–µ—Ä" -ForegroundColor Gray
Write-Host "   2. python demo-data/load_demo_data.py" -ForegroundColor Gray

# –°–æ–∑–¥–∞–Ω–∏–µ PowerShell –≤–µ—Ä—Å–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏
$psScript = @"
# PowerShell –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö
`$demoData = Get-Content -Path "demo-data/submissions.json" -Encoding UTF8 | ConvertFrom-Json
`$apiBase = "http://localhost:3001"

Write-Host "üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö –≤ API..." -ForegroundColor Green

for (`$i = 0; `$i -lt `$demoData.Length; `$i++) {
    `$submission = `$demoData[`$i]
    
    try {
        `$response = Invoke-RestMethod -Uri "`$apiBase/api/webhook/submission" -Method POST -Body (`$submission | ConvertTo-Json -Depth 10) -ContentType "application/json"
        Write-Host "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞ `$(`$i+1): `$(`$submission.studentName)" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–±–æ—Ç—ã `$(`$i+1): `$_" -ForegroundColor Red
    }
    
    Start-Sleep -Seconds 1
}

Write-Host "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
"@

$psScript | Out-File -FilePath "demo-data/Load-DemoData.ps1" -Encoding UTF8

Write-Host "üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ (PowerShell):" -ForegroundColor Cyan
Write-Host "   .\demo-data\Load-DemoData.ps1" -ForegroundColor Gray
